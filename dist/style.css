/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
    display: block;
}

body {
    line-height: 1;
}

ol,
ul {
    list-style: none;
}

blockquote,
q {
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

body {
    background: #111;
}

body,
input {
    font-size: 20px;
    line-height: 24px;
    font-family: 'Roboto Slab', serif;
    font-weight: 400;
    font-style: normal;
    color: #eee;
}

h1 {
    font-size: 2em;
    line-height: 2em;
}

h2 {
    font-size: 1.5em;
    line-height: 1.5em;
}

div,
input {
    box-sizing: border-box;
}

.container {
    margin: 1em auto;
    width: 90%;
    max-width: 1000px;
}

.row {
    width: 100%;
    margin-bottom: 1em;
}

input {
    width: 100%;
    padding: 5px 7px;
    background: #333;
    border: 0;
    outline: 0;
    appearance: none;
}

.result {
    padding: 5px 7px;
    background: #333;
}

.flex {
    display: flex;
    flex-direction: row;
}

.flex-fixed {
    flex: 0 1 auto;
}

.flex-dynamic {
    flex: 1 1 auto;
}

.result .name {
    flex: 1 1 auto;
}

.result .state {
    float: right;
}

.result .dir {
    width: 30px;
    margin: 0 1em;
}

.result .dist {
    width: 100px;
}

.result.best {
    background: rgb(112, 67, 7);
}

.result.perfect {
    background: #161;
}

.result.goal {
    line-height: 32px;
    padding-bottom: 7px;
}

.result.goal .name {
    font-size: 28px;
}

.dir {
    text-align: center;
}

.dir span {
    padding: 5px;
    font-family: sans-serif;
    font-size: 1.25em;
    line-height: 1em;
}

.autocomplete {
    max-height: 10em;
    overflow-y: auto;
    background: #333;
    z-index: 10;
}

.autocomplete-item {
    padding: 5px 7px;
}

.autocomplete-item:hover,
.autocomplete-item.selected {
    background: #00f;
    cursor: pointer;
}

.overlay {
    position: fixed;
    z-index: 200;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .9);
}

.modal {
    background: #333;
    padding: 20px;
    position: fixed;
    min-width: 50%;
    max-width: 90%;
    max-height: 90%;
    z-index: 250;
}

.centered {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

@keyframes fadeIn {
    0% {
        opacity: 0.5;
    }

    100% {
        opacity: 1;
    }
}

.slide-in {
    animation: fadeIn 1s;
}

form {
    position: relative;
}

.not-found {
    position: absolute;
    top: 5px;
    right: 10px;
    opacity: 0;
    animation: fadeInOut 2s;
}

.clickable {
    cursor: pointer;
}

.toaster {
    z-index: 1000;
    position: fixed;
    top: 20px;
    right: 20px;
}

.toaster .toast {
    opacity: 0;
    padding: 20px;
    background: #333;
    color: #fff;
}

.modal {
    display: flex;
    flex-direction: row;
}

.modal .row {
    width: 50%;
}

.map {
    position: relative;
    width: 100%;
    max-height: 85%;
    padding-top: 135.3658537%;
}

.map svg {
    position: absolute;
    top: 0;
    left: 0;
}

.map .map-point {
    position: absolute;
}

.centered-marker {
    transform: translate(-50%, -100%);
}

svg path {
    stroke-width: 1px;
    fill: #111;
    stroke: #333;
    stroke-linecap: round;
}

.width-90 {
    width: 90%;
    margin: 0 auto;
}

@keyframes fadeInOut {
    0% {
        opacity: 0;
    }

    16% {
        opacity: 1;
    }

    84% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

@media only screen and (max-width: 650px) {
    body {
        font-size: 16px;
    }

    .result .dist {
        width: 80px;
    }

    .result .state {
        font-size: .8em;
        float: none;
        display: block;
    }

    .modal {
        display: block;
        width: 90%;
    }

    .modal .row {
        width: 100%;
    }
}

@media only screen and (max-width: 1000px) {
    .modal {
        width: 90%;
        max-width: 1000px;
    }
}